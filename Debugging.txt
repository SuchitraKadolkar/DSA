 Incorrect List Modification
python
Copy
Edit
def modify_list(lst):
    for i in range(len(lst)):
        if lst[i] % 2 == 0:
            lst.remove(lst[i])  # Bug 1: Removing while iterating causes index shift

numbers = [1, 2, 3, 4, 5, 6]
modify_list(numbers)
print(numbers)  # Expected Output: [1, 3, 5], but it may not work correctly
Bugs to find:
Modifying a list while iterating causes index shifts, leading to skipped elements.
Use list comprehension or iterate over a copy instead.
2. Division by Zero Error
python
Copy
Edit
def divide_numbers(a, b):
    return a / b  # Bug 1: No check for division by zero

print(divide_numbers(10, 0))  # Bug 2: This will cause a ZeroDivisionError
Bugs to find:
No handling for division by zero.
Add a condition to check if b == 0 before division.
3. Logical Error in Finding Maximum
python
Copy
Edit
def find_max(arr):
    max_value = 0  # Bug 1: Should initialize to first element, not 0
    for num in arr:
        if num > max_value:
            max_value = num
    return max_value

print(find_max([-10, -20, -5, -30]))  # Expected Output: -5, but function returns 0
Bugs to find:
Incorrect initialization of max_value to 0, leading to wrong results for negative numbers.
Should initialize max_value = arr[0] instead.
4. String Concatenation Error
python
Copy
Edit
def greet(name):
    greeting = "Hello, " + name + "!"  # Bug 1: What if `name` is None?
    return greeting

print(greet(None))  # TypeError: can only concatenate str (not "NoneType") to str
Bugs to find:
Concatenation fails if name is None.
Fix: Use str(name) or check for None before concatenation.
5. Incorrect Use of Default Arguments
python
Copy
Edit
def append_to_list(value, my_list=[]):  # Bug 1: Mutable default argument
    my_list.append(value)
    return my_list

print(append_to_list(1))  # Expected Output: [1]
print(append_to_list(2))  # Expected Output: [2], but it prints [1, 2]

>>>    print(file.read())  # Bug 1: Trying to read after closing the file
          ~~~~~~~~~^^
ValueError: I/O operation on closed file.

Bugs to find:
Mutable default argument (my_list=[]) is shared across calls.
Fix: Use None as default and initialize inside the function.
6. Infinite Loop Issue
python
Copy
Edit
def countdown(n):
    while n >= 0:
        print(n)
        n + 1  # Bug 1: `n` is not decremented, causing infinite loop

countdown(5)
Bugs to find:
n is not being decremented (n - 1 is computed but not stored).
Fix: Use n -= 1 inside the loop.
7. Incorrect Dictionary Access
python
Copy
Edit
person = {"name": "Alice", "age": 25}
print(person["gender"])  # Bug 1: KeyError since "gender" doesn't exist
Bugs to find:
Trying to access a non-existent key causes a KeyError.
Fix: Use person.get("gender", "Not specified") instead.
8. Function Not Returning Correct Value
python
Copy
Edit
def calculate_area(radius):
    area = 3.14 * radius ** 2  # Bug 1: Function does not return anything

print(calculate_area(5))  # Expected Output: 78.5, but prints None
Bugs to find:
Function calculates but does not return the value.
Fix: Add return area at the end of the function.
9. List Index Error
python
Copy
Edit
numbers = [10, 20, 30]
print(numbers[3])  # Bug 1: IndexError because list only has 3 elements
Bugs to find:
Accessing an out-of-range index results in IndexError.
Fix: Check len(numbers) before accessing an index.
10. File Handling Mistake
python
Copy
Edit
file = open("data.txt", "r")
data = file.read()
print(data)
file.close()

print(file.read())  # Bug 1: Trying to read after closing the file
Bugs to find:
Trying to read from a closed file results in an error.
Fix: Read before closing, or use with open(...) for automatic closing.
